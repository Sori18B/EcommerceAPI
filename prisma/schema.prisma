generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userID           Int      @id @default(autoincrement())
  roleID           Int
  name             String
  lastName         String
  email            String   @unique
  password         String
  phoneNumber      String  @db.VarChar(15) @unique
  imageURL         String? 
  stripeCustomerID String? @db.VarChar(255)

  // timestamps
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // relations
  role      Role      @relation(fields: [roleID], references: [roleID])
  addresses Address[]
}

enum AddressType {
  BILLING
  SHIPPING
  BOTH
}

model Address {
  // Identificación
  addressID     Int      @id @default(autoincrement())
  userID        Int
  addressType   AddressType @default(BOTH)

  // Datos personales en la dirección
  firstName     String   @db.VarChar(100)
  lastName      String   @db.VarChar(100)

  // Dirección física (REQUERIDOS por Stripe)
  street        String   @db.VarChar(255)
  neighborhood  String?  @db.VarChar(100)  // ← OPCIONAL
  city          String   @db.VarChar(100)
  state         String   @db.VarChar(100)
  postalCode    String   @db.VarChar(20)
  countryCode   String   @db.VarChar(2)    // ← ISO 2 caracteres

  // Flags de uso
  isBillingDefault  Boolean @default(false)
  isShippingDefault Boolean @default(false)

  // Timestamps
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // relations
  user User @relation(fields: [userID], references: [userID])

  // Índice para performance
  @@index([userID])
}

model Role {
  roleID    Int     @id @default(autoincrement())
  roleName  String  @unique @db.VarChar(50)

  // back-relation
  users User[]
}